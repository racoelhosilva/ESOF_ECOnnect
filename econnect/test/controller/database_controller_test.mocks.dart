// Mocks generated by Mockito 5.4.4 from annotations
// in econnect/test/controller/database_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:econnect/model/database.dart' as _i2;
import 'package:econnect/model/post.dart' as _i6;
import 'package:econnect/model/user.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Database].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabase extends _i1.Mock implements _i2.Database {
  @override
  set lastDoc(_i3.DocumentSnapshot<Map<String, dynamic>>? _lastDoc) =>
      super.noSuchMethod(
        Invocation.setter(
          #lastDoc,
          _lastDoc,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<String> storeImage(String? path) => (super.noSuchMethod(
        Invocation.method(
          #storeImage,
          [path],
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #storeImage,
            [path],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #storeImage,
            [path],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<String> retrieveFileUrl(String? name) => (super.noSuchMethod(
        Invocation.method(
          #retrieveFileUrl,
          [name],
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #retrieveFileUrl,
            [name],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #retrieveFileUrl,
            [name],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> addPost(_i6.Post? post) => (super.noSuchMethod(
        Invocation.method(
          #addPost,
          [post],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i6.Post>> getNextPosts(int? numDocs) => (super.noSuchMethod(
        Invocation.method(
          #getNextPosts,
          [numDocs],
        ),
        returnValue: _i4.Future<List<_i6.Post>>.value(<_i6.Post>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i6.Post>>.value(<_i6.Post>[]),
      ) as _i4.Future<List<_i6.Post>>);

  @override
  void resetPostsCursor() => super.noSuchMethod(
        Invocation.method(
          #resetPostsCursor,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> addUser(_i7.User? user) => (super.noSuchMethod(
        Invocation.method(
          #addUser,
          [user],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i7.User?> getUser(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [id],
        ),
        returnValue: _i4.Future<_i7.User?>.value(),
        returnValueForMissingStub: _i4.Future<_i7.User?>.value(),
      ) as _i4.Future<_i7.User?>);
}
